plugins {
    id 'com.android.application'
}
apply plugin: 'kotlin-android'
apply plugin: "com.apollographql.apollo"
apply plugin: 'com.amplifyframework.amplifytools'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

//            ./
//            gradlew downloadApolloSchema \ --endpoint="https://users-service.omnivoltaic.com/graphql" \ --schema="src/main/graphql/com/example/schema.json"

    defaultConfig {
        applicationId "org.oves.mobapp_mqtt_androidhub"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
repositories {
    maven {
        url "https://repo.eclipse.org/content/repositories/paho-releases/"
    }
    mavenCentral()
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.core:core-ktx:1.3.2"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.apollographql.apollo:apollo-runtime:2.5.3"
    implementation 'com.github.GrenderG:Toasty:1.5.0'
    implementation 'com.auth0.android:jwtdecode:2.0.0'
    // optional: if you just want the generated models and parsers and write your own HTTP code/cache code, you can remove apollo-runtime
    // and use apollo-api instead
    implementation "com.apollographql.apollo:apollo-api:2.5.3"
    implementation "com.apollographql.apollo:apollo-runtime:2.5.3"
    implementation 'com.graphql-java:graphql-java:16.2'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.squareup.okhttp3:okhttp:4.9.1"
    implementation "com.apollographql.apollo:apollo-runtime:2.5.3"
    implementation 'com.github.GrenderG:Toasty:1.5.0'
    implementation 'com.auth0.android:jwtdecode:2.0.0'
    // optional: if you just want the generated models and parsers and write your own HTTP code/cache code, you can remove apollo-runtime
    // and use apollo-api instead
    implementation "com.apollographql.apollo:apollo-api:2.5.3"
    implementation "com.apollographql.apollo:apollo-runtime:2.5.3"
    implementation 'com.graphql-java:graphql-java:16.2'
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.amplifyframework:aws-api:1.17.1'
    implementation 'com.amplifyframework:aws-datastore:1.17.1'
    implementation "org.jetbrains:annotations:20.1.0"
    testImplementation "org.jetbrains:annotations:20.1.0"
    implementation 'org.greenrobot:eventbus:3.2.0'
    implementation 'com.balysv:material-ripple:1.0.2'
}